{"version":3,"sources":["app/App.tsx","index.tsx"],"names":["App","timer","useState","data","setData","copied","setCopied","keypressHandle","evn","preventDefault","result","key","handleClick","text","isCopy","event","target","parentElement","classList","add","console","log","clearTimeout","setTimeout","remove","useEffect","document","addEventListener","removeEventListener","className","fixed","size","href","which","onClick","title","location","keyCode","code","src","theme","ReactDOM","render","getElementById"],"mappings":"oPA8GeA,EApGH,WACV,IAuCIC,EAvCJ,EAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,SAASC,EAAeC,GACtBA,EAAIC,iBA+BJ,IA9BA,IA6BMC,EAAS,GACf,MA9B+C,CAC7C,SACA,OACA,UACA,cACA,MAEA,WACA,UACA,SACA,WACA,OACA,WACA,UAGA,QAEA,eACA,aACA,WACA,mBACA,SACA,aACA,YACA,YACA,cACA,QAGF,eAA2B,CAAtB,IAAIC,EAAG,KACVD,EAAOC,GAAOH,EAAIG,GAEpBP,EAAQM,GAGV,SAASE,EAAYC,EAAcC,EAAiBC,GAClDA,EAAMN,iBACN,IAAMO,EAASD,EAAMC,OACrBA,EAAOC,cAAeC,UAAUC,IAAI,UACpCC,QAAQC,IAAIN,GACRd,GAAOqB,aAAarB,GACxBK,GAAU,GACVL,EAAQsB,YAAW,WACjBjB,GAAU,GACVU,EAAOC,cAAeC,UAAUM,OAAO,UACvCF,aAAarB,KACZ,KAQL,OANAwB,qBAAU,WAER,OADAC,SAASC,iBAAiB,UAAWpB,GAC9B,WACLmB,SAASE,oBAAoB,UAAWrB,MAEzC,IAED,sBAAKsB,UAAU,MAAf,UACE,cAAC,IAAD,CAAeC,OAAK,EAACC,KAAM,GAAIf,OAAO,SAASgB,KAAK,0CACnD3B,GAAU,qBAAKwB,UAAU,cAAf,oBACX,yBAAQA,UAAU,aAAlB,WACI1B,GAAQ,qBAAK0B,UAAU,OAAf,+DACT1B,GACC,eAAC,WAAD,WACE,qBAAK0B,UAAU,YAAf,SAA4B1B,EAAK8B,QACjC,sBAAKJ,UAAU,WAAf,UACE,cAAC,IAAD,CAAiBK,QAAStB,EAAaC,KAAMV,EAAKQ,IAAlD,SACE,qBAAKwB,MAAM,YAAX,SAAwBhC,EAAKQ,QAE/B,cAAC,IAAD,CAAiBuB,QAAStB,EAAaC,KAAI,UAAKV,EAAKiC,UAArD,SACE,qBAAKD,MAAM,iBAAX,SAA6BhC,EAAKiC,aAEpC,cAAC,IAAD,CAAiBF,QAAStB,EAAaC,KAAI,UAAKV,EAAK8B,OAArD,SACE,qBAAKE,MAAM,cAAcN,UAAU,aAAnC,SACG1B,EAAK8B,UAGV,cAAC,IAAD,CAAiBC,QAAStB,EAAaC,KAAI,UAAKV,EAAKkC,SAArD,SACE,qBAAKF,MAAM,gBAAgBN,UAAU,aAArC,SACG1B,EAAKkC,YAGV,cAAC,IAAD,CAAiBH,QAAStB,EAAaC,KAAI,UAAKV,EAAKmC,MAArD,SACE,qBAAKH,MAAM,aAAX,SAAyBhC,EAAKmC,YAGlC,qBAAKT,UAAU,YAAf,SACE,cAAC,IAAD,CAAWU,IAAKpC,EAAMqC,MAAM,sB,MChG1CC,IAASC,OAAO,cAAC,EAAD,IAAShB,SAASiB,eAAe,W","file":"static/js/main.09e3b245.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport ReactJson from 'react-json-view';\nimport CopyToClipboard from '@uiw/react-copy-to-clipboard';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport './App.css';\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\ntype KeyboardEventType = Writeable<KeyboardEvent>\n\nconst App = () => {\n  const [data, setData] = useState<KeyboardEventType>();\n  const [copied, setCopied] = useState(false);\n  function keypressHandle(evn: KeyboardEvent) {\n    evn.preventDefault();\n    const protoKeys: (keyof KeyboardEventType)[] = [\n      'altKey',\n      'code',\n      'ctrlKey',\n      'isComposing',\n      'key',\n      // 'locale',\n      'location',\n      'metaKey',\n      'repeat',\n      'shiftKey',\n      'char',\n      'charCode',\n      'keyCode',\n      // 'keyIdentifier',\n      // 'keyLocation',\n      'which',\n\n      'cancelBubble',\n      'cancelable',\n      'composed',\n      'defaultPrevented',\n      'detail',\n      'eventPhase',\n      'isTrusted',\n      'timeStamp',\n      'returnValue',\n      'type',\n    ];\n    const result = {} as any;\n    for (let key of protoKeys) {\n      result[key] = evn[key];\n    }\n    setData(result as KeyboardEventType);\n  }\n  let timer: NodeJS.Timeout;\n  function handleClick(text: string, isCopy: boolean, event: React.MouseEvent<HTMLSpanElement, MouseEvent>) {\n    event.preventDefault();\n    const target = event.target as HTMLSpanElement;\n    target.parentElement!.classList.add('copied');\n    console.log(event)\n    if (timer) clearTimeout(timer);\n    setCopied(true);\n    timer = setTimeout(() => {\n      setCopied(false);\n      target.parentElement!.classList.remove('copied')\n      clearTimeout(timer);\n    }, 1000);\n  }\n  useEffect(() => {\n    document.addEventListener('keydown', keypressHandle);\n    return () => {\n      document.removeEventListener('keydown', keypressHandle);\n    };\n  }, []);\n  return (\n    <div className=\"App\">\n      <GitHubCorners fixed size={56} target=\"_blank\" href=\"https://github.com/uiwjs/keycode-info\" />\n      {copied && <div className=\"copied-info\">copied</div>}\n      <header className=\"App-header\">\n        {!data && <div className=\"help\">Press any key to get the JavaScript event keycode</div>}\n        {data && (\n          <Fragment>\n            <kbd className=\"key-which\">{data.which}</kbd>\n            <div className=\"keyboard\">\n              <CopyToClipboard onClick={handleClick} text={data.key}>\n                <kbd title=\"event.key\">{data.key}</kbd>\n              </CopyToClipboard>\n              <CopyToClipboard onClick={handleClick} text={`${data.location}`}>\n                <kbd title=\"event.location\">{data.location}</kbd>\n              </CopyToClipboard>\n              <CopyToClipboard onClick={handleClick} text={`${data.which}`}>\n                <kbd title=\"event.which\" className=\"deprecated\">\n                  {data.which}\n                </kbd>\n              </CopyToClipboard>\n              <CopyToClipboard onClick={handleClick} text={`${data.keyCode}`}>\n                <kbd title=\"event.keyCode\" className=\"deprecated\">\n                  {data.keyCode}\n                </kbd>\n              </CopyToClipboard>\n              <CopyToClipboard onClick={handleClick} text={`${data.code}`}>\n                <kbd title=\"event.code\">{data.code}</kbd>\n              </CopyToClipboard>\n            </div>\n            <div className=\"json-view\">\n              <ReactJson src={data} theme=\"ocean\" />\n            </div>\n          </Fragment>\n        )}\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}